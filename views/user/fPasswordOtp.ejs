<%-include('../layout/indexHeader')-%>

      <main class="cd__main">
         <!-- Start DEMO HTML (Use the following code into your project)-->
         <body class="container-fluid bg-body-tertiary d-block">
  <div class="row justify-content-center">
      <div class="col-12 col-md-6 col-lg-4" style="min-width: 500px;">
        <div class="card bg-white mb-5 mt-5 border-0" style="box-shadow: 0 12px 15px rgba(0, 0, 0, 0.02);">
          <div class="card-body p-5 text-center">
            <% if(typeof msg != 'undefined'){ %>
              <p class="text-primary-50 text-center text-danger mb-5" id="text-danger"><%= msg %></p> 
             <% } %>
            <h4>Verify</h4>
            <p>Your code was sent to you via email</p>
            <form action="" method="post">
            <div class="otp-field mb-4">
              <input name="num1" type="number" />
              <input name="num2" type="number" disabled />
              <input name="num3" type="number" disabled />
              <input name="num4" type="number" disabled />
              <input name="num5" type="number" disabled />
              <input name="num6" type="number" disabled />
            </div>

            <button type="submit" class="btn btn-primary mb-3">
              Verify
            </button>
          </form>

            <p class="resend text-muted mb-0">
             Code will expire in <div id="timer"></div> &nbsp;<a href="/resendOTP">Resend OTP</a>
            </p>
          </div>
        </div>
      </div>
    </div>

    <script>
  const timeLimit = 150; 
  
  const timerDisplay = document.getElementById('timer');
  
  let timerInterval; 
  let remainingTime = timeLimit;  
  function updateTimerDisplay() {
    const minutes = Math.floor(remainingTime / 60);
    const seconds = remainingTime % 60;
  
    timerDisplay.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
  }
  
  function startTimer() {
    updateTimerDisplay();
  
    timerInterval = setInterval(() => {
      remainingTime--;
  
      updateTimerDisplay();
  
      if (remainingTime <= 0) {
        clearInterval(timerInterval);
      }
    }, 1000); 
  }
  
 
  startTimer();
  
  const form = document.querySelector('form');
  form.addEventListener('submit', function(event) {
    event.preventDefault(); 
    
    const isOTPVerified = Math.random() < 0.5; 

    if (isOTPVerified) {
      this.reset();
    } else {
      console.log('Incorrect OTP. Timer will continue.');
    }
  });
      

    
    </script>
      
      <script>
        const inputs = document.querySelectorAll(".otp-field > input");
const button = document.querySelector(".btn");

window.addEventListener("load", () => inputs[0].focus());
button.setAttribute("disabled", "disabled");

inputs[0].addEventListener("paste", function (event) {
  event.preventDefault();

  const pastedValue = (event.clipboardData || window.clipboardData).getData(
    "text"
  );
  const otpLength = inputs.length;

  for (let i = 0; i < otpLength; i++) {
    if (i < pastedValue.length) {
      inputs[i].value = pastedValue[i];
      inputs[i].removeAttribute("disabled");
      inputs[i].focus;
    } else {
      inputs[i].value = ""; 
      inputs[i].focus;
    }
  }
});

inputs.forEach((input, index1) => {
  input.addEventListener("keyup", (e) => {
    const currentInput = input;
    const nextInput = input.nextElementSibling;
    const prevInput = input.previousElementSibling;

    if (currentInput.value.length > 1) {
      currentInput.value = "";
      return;
    }

    if (
      nextInput &&
      nextInput.hasAttribute("disabled") &&
      currentInput.value !== ""
    ) {
      nextInput.removeAttribute("disabled");
      nextInput.focus();
    }

    if (e.key === "Backspace") {
      inputs.forEach((input, index2) => {
        if (index1 <= index2 && prevInput) {
          input.setAttribute("disabled", true);
          input.value = "";
          prevInput.focus();
        }
      });
    }

    button.classList.remove("active");
    button.setAttribute("disabled", "disabled");

    const inputsNo = inputs.length;
    if (!inputs[inputsNo - 1].disabled && inputs[inputsNo - 1].value !== "") {
      button.classList.add("active");
      button.removeAttribute("disabled");

      return;
    }
  });
});
      </script>
<%-include('../layout/footer')-%>